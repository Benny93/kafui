version: 1

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

release:
  github:
    owner: Benny93
    name: kafui

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

# .goreleaser.yaml
brews:
  - # Name of the recipe
    #
    # Default: ProjectName
    # Templates: allowed
    name: kafui

    # IDs of the archives to use.
    # Empty means all IDs.
    #ids:
    #- foo
    #- bar

    # GOARM to specify which 32-bit arm version to use if there are multiple
    # versions from the build section. Brew formulas support only one 32-bit
    # version.
    #
    # Default: 6
    goarm: 6

    # GOAMD64 to specify which amd64 version to use if there are multiple
    # versions from the build section.
    #
    # Default: v1
    goamd64: v1

    # NOTE: make sure the url_template, the token and given repo (github or
    # gitlab) owner and name are from the same kind.
    # We will probably unify this in the next major version like it is
    # done with scoop.

    # URL which is determined by the given Token (github, gitlab or gitea).
    #
    # Default depends on the client.
    # Templates: allowed example https://github.com/Benny93/kafui/releases/download/v0.1.8/kafui_linux_i386.tar.gz
    url_template: "https://github.com/Benny93/kafui/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Headers to include in the `url` stanza.
    # This can be a more modern alternative to `download_strategy` in some
    # cases.
    #
    # Since: v1.25
    #url_headers:
    #  - "Accept: application/octet-stream"
    #  - 'Authorization: bearer #{ENV["HOMEBREW_GITHUB_API_TOKEN"]}'

    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    download_strategy: CurlDownloadStrategy

    # Allows you to add a custom require_relative at the top of the formula
    # template.
    #custom_require: custom_download_strategy

    # Git author used to commit to the repository.
    commit_author:
      name: Benjamin Vollmer
      email: kenny.32@live.de

    # The project name and current git tag are used in the format string.
    #
    # Templates: allowed
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    # Folder inside the repository to put the formula.
    folder: Formula

    # Caveats for the user of your binary.
    caveats: "Run using kafui"

    # Your app's homepage.
    homepage: "https://github.com/Benny93/kafui"

    # Your app's description.
    #
    # Templates: allowed
    description: "Terminal ui inspired by k9s to quickly browse multiple kafka instances"

    # SPDX identifier of your app's license.
    license: "MIT"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    #
    # Templates: allowed
    #skip_upload: true

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    # custom_block: |
    #  head "https://github.com/some/package.git"

    # Packages your package depends on.
    # dependencies:
    #- name: git
    # Allow to specify the OS in which the dependency is required.
    # Valid options are `mac` and `linux`.
    #
    # Since: v1.23.0
    #  os: mac

    # Packages that conflict with your package.
    #conflicts:
    # - svn
    # - bash

    # Specify for packages that run as a service.
    #plist: |
    # <?xml version="1.0" encoding="UTF-8"?>
    # ...
    # Custom post_install script for brew.
    # Could be used to do any additional work after the "install" script
    #post_install: |
    #    etc.install "app-config.conf"
    # ...

    # Repository to push the generated files to.
    repository:
      # Repository owner.
      #
      # Templates: allowed
      owner: Benny93

      # Repository name.
      #
      # Templates: allowed
      name: homebrew-kafui

      # Optionally a branch can be provided.
      #
      # Default: default repository branch
      # Templates: allowed
      branch: main

      # Optionally a token can be provided, if it differs from the token
      # provided to GoReleaser
      # Templates: allowed
      #token: "{{ .Env.GITHUB_PERSONAL_AUTH_TOKEN }}"

      # Sets up pull request creation instead of just pushing to the given branch.
      # Make sure the 'branch' property is different from base before enabling
      # it.
      #
      # Since: v1.17
      pull_request:
        # Whether to enable it or not.
        enabled: false

        # Whether to open the PR as a draft or not.
        #
        # Since: v1.19
        draft: false

        # If the pull request template has checkboxes, enabling this will
        # check all of them.
        #
        # This feature is only available in GoReleaser Pro.
        # Since: v1.20 (pro)
        #check_boxes: true

      # Clone, create the file, commit and push, to a regular Git repository.
      #
      # Notice that this will only have any effect if the given URL is not
      # empty.
      #
      # Since: v1.18
      #git:
      # The Git URL to push.
      #
      # Templates: allowed
      #  url: 'ssh://git@github.com:Benny93/homebrew-kafui.git'

      # The SSH private key that should be used to commit to the Git
      # repository.
      # This can either be a path or the key contents.
      #
      # IMPORTANT: the key must not be password-protected.
      #
      # WARNING: do not expose your private key in the configuration file!
      #
      # Templates: allowed
      #private_key: '{{ .Env.PRIVATE_KEY_PATH }}'

      # The value to be passed to `GIT_SSH_COMMAND`.
      # This is mainly used to specify the SSH private key used to pull/push
      # to the Git URL.
      #
      # Default: 'ssh -i {{ .KeyPath }} -o StrictHostKeyChecking=accept-new -F /dev/null'
      # Templates: allowed
      #  ssh_command: 'ssh -i {{ .Env.KEY }} -o SomeOption=yes'

winget:
  - name: kafui
    publisher: github\com\benny93
    short_description: "Terminal UI to explore kafka topics"
    license: "mit"
    package_identifier: github.com.benny93.kafui
    tags:
      - kafka
      - go
      - cli
    repository:
      # https://github.com/Benny93/winget-pkgs
      owner: Benny93
      name: winget-pkgs
      branch: master
      pull_request:
        enabled: true
        base:
          owner: microsoft
          name: winget-pkgs
          branch: master
